<!DOCTYPE html>
<html>
	<head>
	<title>OX Ward Temps</title>
	<script src="https://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyB2a6yPTtz9dMjpVlooC_dPP0fBIh1Dod4"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
	<script type="text/javascript" src="https://www.google.com/jsapi"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>	
	<style type="text/css">
		.jumbotron p {
			display: none;
		}

		#target {
			height: 555px;
		}
				
		.dropdown-menu li {
			font-family: sans-serif;
			font-size: 12px;
			font-weight: bold;
			text-align: center;			
		}
		
		a:hover{
			color: #0000FF;
			font-weight: bold;
		}

		#over_map {
			position: absolute;
			top: 0px;
			left: 50px;
			z-index: 99;
		}

		#wrapper {
			position: relative;
		}

	</style>
		<script type="text/javascript">
							
		</script>
	</head>
	<body>
		<div class="jumbotron">
			<div class="container">
				<h1>Oxford Urban Temperatures</h1>
				<p>The following maps and graphs outline the surface temperatures and relative surface temperatures of the wards of Oxford inside the Ring Road.
				Images from Landsat-8 have been available since 2013, thanks to NASA and the USGS.  The satellite takes images of Oxford every
				16 days. With that, there are 22 images a year, and furthermore, only a handful have completely clear conditions (non-cloudy) over Oxford.  
				The images are then inspected for cloud cover using Quantum GIS, where their data is then extracted and surface temperature calculations are 
				made based on Landsat-8's thermal infra-red sensor (Bands 10 and 11).  A relative comparison of surface temperatures is presented to display 
				the warmer wards of Oxford.</p>
			</div>
		</div>
		<div class="container">
			<div id="wrapper" class="row">
				<div id="target" class="well well-lg col-md-6">
				</div>
				<div id="over_map">
					<h4><span id="mapDate" class="label label-default">June 6th, 2013</span></h4>
				</div>
				<div class="col-md-6">
					<div class="short-div">
						<div class="panel panel-info">
							<div class="panel-heading">View Data From Other Dates:</div>
							<div id="dates" class="panel-body">
								<div class="btn-group">
									<button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-hashpopup="true" aria-expanded="false">2013
									<span class="caret"></span>
									</button>
									<ul class="dropdown-menu">
										<li id="MEANJun13U" value="0"><a href="#">June 6th</a></li>
										<li id="MEANJul13U" value="1"><a href="#">July 8th</a></li>
										<li id="MEANOct13U" value="2"><a href="#">October 12th</a></li>
									</ul>
								</div>
								<div class="btn-group">
									<button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-hashpopup="true" aria-expanded="false">2014
									<span class="caret"></span>
									</button>
									<ul class="dropdown-menu">
										<li id="MEANFeb14U" value="3"><a href="#">February 1st</a></li>
									</ul>
								</div>
								<div class="btn-group">
									<button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-hashpopup="true" aria-expanded="false">2015
									<span class="caret"></span>
									</button>
									<ul class="dropdown-menu">
										<li id="MEANJan15U" value="4"><a href="#">January 19th</a></li>
										<li id="MEANFeb15U" value="5"><a href="#">February 4th</a></li>
										<li id="MEANApr15U" value="6"><a href="#">April 9th</a></li>
										<li id="MEANMay15U" value="7"><a href="#">May 27th</a></li>
									</ul>
								</div>
							</div>
						</div>
					</div>
					<div class="short-div">
						<div class="panel panel-success">
							<div class="panel-heading">Urban Temp Comparison (based upon (&deg;C) warmer than coolest temp in Oxford)</div>
							<div id="bar" class="panel-body"></div>
						</div>
					</div>
				</div>
			</div>			
		</div>
		<footer>
			<p>Contains OS data Â© Crown copyright [and database right] (2015)</p>
		</footer>
		<script>

			google.load('visualization', '1.0', {'packages':['corechart']});
			//google.setOnLoadCallback(drawChart); //don't need this as it is called after the polygons are sorted
				
				function drawChart(polyArray){
					//console.log("In drawChart! polyArray: ",polyArray);
					var data = new google.visualization.DataTable();
					data.addColumn('string', 'Ward');
					data.addColumn('number', 'Urban Temp');
					data.addColumn({type:'string', role: 'style'});//not the easiest to implement...kept doing {role: 'style'}
																				//and getting type error
					for (var i=0; i<24; i++){
						var wardName = polyArray[i].ID.slice(0,polyArray[i].ID.length-5);//shortening the ward name (-"ward")
						var urbanTemp = +(polyArray[i].utemp).toFixed(2);//coercing to number
						var color = polyArray[i].fillColor;
					data.addRow([wardName,urbanTemp,color]);		   
					}
					// Set chart options
					var options = {'title':'The Difference in Temperature from the coolest points in Oxford',
									   'width': '100%',
									   'height': 355,
										animation: {
														'startup': true,
														'duration': 1500,
														'easing': 'inAndOut'
													  },
										legend: {position: 'none'},
									   bar: {groupWidth: '96%'},
										chartArea: {left: 30,top:30,width:'90%',height:'70%'},
										hAxis: {
												  slantedTextAngle: 60,
												  viewWindowMode: 'maximized'
												 }														
									  };

					// Instantiate and draw our chart, passing in some options.
					var chart = new google.visualization.ColumnChart(document.getElementById('bar'));
					chart.draw(data, options);
			 	}	

	
			var map,
				 infowindow,
				 justTemps = [],
				 colorScale = ['#d73027','#f46d43','#fdae61','#fee090','#e0f3f8','#abd9e9','#74add1','#4575b4'];
			
			function initialize() {

				$('a').attr("href", "javascript:void(0)");

				var mapOptions = {
					center: new google.maps.LatLng(51.7551,-1.25),
					zoom: 12,
					mapTypeId: google.maps.MapTypeId.ROADMAP,
					streetViewControl: false,
					panControl: false,
					minZoom: 12,
				}
				map = new google.maps.Map(document.getElementById("target"), mapOptions);
				
				var wardTemps = [],
					 allPolygons = [],
					 datelist = ['June 6th, 2013','July 8th, 2013','October 12th, 2013','February 1st, 2014','January 19th, 2015','February 4th, 2015','April 9th, 2015','May 27th, 2015'],
					 wardData = new google.maps.Data();		 
				
				$('li').click(function(){
					for (var i=0; i<24; i++){
						allPolygons[i].setMap(null);
					}
					allPolygons = [];
					justTemps = [];
					var date = (this).id;
					var showdate = (this).value;
					$('#mapDate').text(datelist[showdate]);
					loadWardData(date);
				})
				
				loadWardData("MEANJun13U");
				
				function loadWardData(date){
					
					wardData.loadGeoJson('WardMeans.geojson',{idPropertyName:"NAME"},function (features){
						features.forEach(function(f){
							var geomArray = f.getGeometry().getArray();
							var coords = [];
							key = f.getId();
							var value = f.getProperty(date);
							justTemps.push(value);
							wardTemps[key] = value;
							//about now on day two of googlemaps that I want to use some D3 domain and ranges!
							geomArray.forEach(function(p){

								var pointArray = p.getArray();

								for (var i=0; i<pointArray.length; i++){
								var iPoint = pointArray[i];
								var point = new google.maps.LatLng(iPoint.A,iPoint.F);
								
								coords.push(point);
								}
						})
						var x = [],
							 y = [];

							for (var i=0; i<coords.length; i++){
								x.push(coords[i].F);
								y.push(coords[i].A);																						
							}
							x.sort(function(a,b){return a-b});
							y.sort(function(a,b){return a-b});

							var xmin = x[0],
								 ymin = y[0],
								 xmax = x[coords.length-1],
								 ymax = y[coords.length-1],
								 center = {},
								 date2 = date.slice(0,length-1)+"S",
								 tempU = f.getProperty(date),
								 tempS = (f.getProperty(date2)-272.15).toFixed(2)

							center.x = xmin + ((xmax - xmin)/2);
							center.y = ymax - ((ymax - ymin)/2);		
							
							var cent = new google.maps.LatLng(center.y,center.x);
							var poly = new google.maps.Polygon({
													paths: coords,
													ID: f.getId(),
													map: map,
													strokeColor: '#000000',
													fillOpacity: 0.7,
													strokeWeight: 1,
													utemp: tempU,
													stemp: tempS,
													desc: '<b>'+f.getId()+'</b><br>Urban Temp: '+tempU.toFixed(2)+
															' (&deg;C)<br>Surface Temp: '+tempS+' (&deg;C)'								
													});
							allPolygons.push(poly);
							
							addInfo(poly, cent);	//add event listener and infowindows
						})
						justTemps.sort(function(a,b){return b-a});
						//setWardStyle();
						polystyle(allPolygons,justTemps);
						drawChart(allPolygons);
					});
				};		
			}//end initialize()
				
				function polystyle(polys,temps){
					var count = 0;
					for (var i=0; i<24; i++){
						var polyTemp = polys[i].utemp;			
						while (polyTemp != temps[count] && count != 25){
							count++;
						}
						count = Math.floor(count/3);
						polys[i].setOptions({
									fillColor: colorScale[count],
									fillOpacity: 0.7
									});
						
						count = 0; //reset counter!						
					}
				};

				function addInfo(feat,c) {
					infowindow = new google.maps.InfoWindow();

					google.maps.event.addListener(feat, 'click', function(){						
						infowindow.setPosition(c);
						infowindow.setContent(feat.desc);
						infowindow.open(map);
					});			
				};
						
		google.maps.event.addDomListener(window, 'load', initialize);			
			
		</script>
	</body>
</html>
